{"version":3,"sources":["store/reducers/user.js","store/actions/actionTypes.js","store/reducers/todo.js","store/reducers/rootReducer.js","config/axios.js","components/Input/Input.js","components/Button/Button.js","containers/Navbar/Navbar.js","store/actions/user.js","containers/Home/Home.js","App.js","index.js"],"names":["initialState","uid","creatorId","email","loginError","signupError","reducer","state","arguments","length","undefined","action","type","Object","objectSpread","token","error","rootReducer","combineReducers","user","userReducer","todo","todoReducer","instance","axios","create","baseURL","process","InputWrapper","styled","input","_templateObject","props","style","padding","margin","react_default","a","createElement","placeholder","value","onChange","changed","ButtonWrapper","button","Button_templateObject","buttonName","NavWrapper","nav","Navbar_templateObject","NavLeft","div","_templateObject2","NavRight","_templateObject3","inputInlineStyle","Navbar","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","localEmail","localPass","emailChanged","bind","assertThisInitialized","passwordChanged","e","setState","target","_this2","onSubmit","event","preventDefault","onLogout","Button","onLogin","Input","Component","connect","dispatch","password","post","then","console","log","localStorage","setItem","headers","data","_id","catch","login","delete","x-auth","getItem","removeItem","HomeWrapper","form","Home_templateObject","Home","onSignup","signup","App","onAuthListen","containers_Navbar_Navbar","containers_Home_Home","get","config","composeEnhancers","compose","store","createStore","applyMiddleware","thunk","app","es","src_App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cdd36082.chunk.js","sourcesContent":["import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    uid: null,\n    creatorId: null,\n    email: null,\n    loginError: null,\n    signupError: null\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        case actionTypes.AUTHENTICATED:\n            return {\n                ...state,\n                uid: action.token,\n                creatorId: action.creatorId,\n                email: action.email,\n                loginError: null,\n                signupError: null\n            }\n        case actionTypes.UNAUTHENTICATED:\n            return state;\n        case actionTypes.LOGINSUCCESS:\n            return {\n                ...state,\n                uid: action.token,\n                creatorId: action.creatorId,\n                email: action.email,\n                loginError: null\n            };\n        case actionTypes.LOGINFAILED:\n            return {\n                ...state,\n                loginError: action.error\n            };\n        case actionTypes.SIGNUPSUCCESS:\n            return {\n                ...state,\n                uid: action.token,\n                creatorId: action.creatorId,\n                email: action.email,\n                signupError: null\n            };\n        case actionTypes.SIGNUPFAILED:\n            return {\n                ...state,\n                signupError: action.error\n            };\n        case actionTypes.LOGOUTSUCCESS:\n            return {\n                ...state,\n                uid: null,\n                creatorId: null,\n                email: null,\n                loginError: null,\n                signupError: null\n            };\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","export const AUTHENTICATED = 'AUTHENTICATED';\nexport const UNAUTHENTICATED = 'UNAUTHENTICATED';\nexport const LOGINSUCCESS = 'LOGINSUCCESS';\nexport const LOGINFAILED = 'LOGINFAILED';\nexport const SIGNUPSUCCESS = 'SIGNUPSUCCESS';\nexport const SIGNUPFAILED = 'SIGNUPFAILED';\nexport const LOGOUTSUCCESS = 'LOGOUTSUCCESS';","import * as actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n\n};\n\nconst reducer = (state = initialState, action) => {\n    switch(action.type) {\n        default:\n            return state;\n    }\n};\n\nexport default reducer;","import { combineReducers } from 'redux';\nimport userReducer from './user';\nimport todoReducer from './todo';\n\nconst rootReducer = combineReducers({\n    user: userReducer,\n    todo: todoReducer\n});\n\nexport default rootReducer;","import axios from 'axios';\n\nconst instance = axios.create({\n    baseURL: process.env.NODE_ENV === 'development' ? process.env.REACT_APP_MONGO_LOCAL: process.env.REACT_APP_BASE_URL\n});\n\nexport default instance;","import React from 'react';\nimport styled from 'styled-components';\n\nconst InputWrapper = styled.input`\n    padding: ${props => props.style.padding};\n    margin: ${props => props.style.margin};\n`\n\nconst input = (props) => {\n    return (\n        <InputWrapper placeholder={props.placeholder} value={props.value} \n            onChange={props.changed} style={props.style} type={props.type} />\n    );\n};\n\nexport default input;","import React from 'react';\nimport styled from 'styled-components';\n\nconst ButtonWrapper = styled.button`\n    margin: 0 1.5rem 0 0.5rem;\n`\n\nconst button = (props) => {\n    return (\n        <ButtonWrapper>\n            {props.buttonName}\n        </ButtonWrapper>\n    );\n};\n\nexport default button;","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { login, logout } from '../../store/actions/index';\n\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\n\nconst NavWrapper = styled.nav`\n        display: flex;\n        background-color: lightblue;\n    `\n    const NavLeft = styled.div`\n        display: inline-flex;\n        width: 50%;\n    `\n    const NavRight = styled.div`\n        display: inline-flex;\n        justify-content: flex-end;\n        width: 50%;\n    `\n\n    const inputInlineStyle = {\n        padding: '0 0.75rem',\n        margin: '0 0.5rem'\n    }\n\nclass Navbar extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            localEmail: '',\n            localPass: ''\n        };\n        this.emailChanged = this.emailChanged.bind(this);\n        this.passwordChanged = this.passwordChanged.bind(this);\n    }\n\n    emailChanged(e) {\n        this.setState({ localEmail: e.target.value });\n    }\n\n    passwordChanged(e) {\n        this.setState({ localPass: e.target.value });\n    }\n\n    render () {\n        let navContent;\n        if (this.props.uid) {\n            navContent = (\n                <NavWrapper>\n                    <NavRight>\n                        <span>{this.props.email}</span>\n                        <form onSubmit={(event) => {\n                            event.preventDefault();\n                            this.props.onLogout();\n                        }}>\n                            <Button buttonName=\"Log out\" />\n                        </form>\n                    </NavRight>\n                </NavWrapper>\n            );\n        } else {\n            navContent = (\n                <NavWrapper>\n                    <NavLeft>\n                        Left\n                    </NavLeft>\n                    <NavRight>\n                        <form onSubmit={(event) => {\n                            event.preventDefault();\n                            this.props.onLogin(this.state.localEmail, this.state.localPass);\n                        }}>\n                            <Input type=\"email\" placeholder=\"E-mail address\" value={this.state.localEmail} changed={this.emailChanged} style={inputInlineStyle} />\n                            <Input type=\"password\" placeholder=\"Password\" value={this.state.localPass} changed={this.passwordChanged} style={inputInlineStyle} />\n                            <Button buttonName=\"Log in\" />\n                        </form>\n                    </NavRight>\n                </NavWrapper>\n            );\n        }\n\n        return navContent;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        uid: state.user.uid,\n        email: state.user.email\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onLogin: (email, password) => dispatch(login(email, password)),\n        onLogout: () => dispatch(logout())\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar);","import * as actionTypes from './actionTypes';\nimport axios from '../../config/axios';\n\nconst loginSuccess = (email, token, creatorId) => {\n    return {\n        type: actionTypes.LOGINSUCCESS,\n        email, \n        token,\n        creatorId\n    }\n};\n\nconst loginFailed = (error) => {\n    return {\n        type: actionTypes.LOGINFAILED,\n        error\n    }\n};\n\nconst signupSuccess = (email, token, creatorId) => {\n    return {\n        type: actionTypes.SIGNUPSUCCESS,\n        email, \n        token,\n        creatorId\n    }\n};\n\nconst signupFailed = (error) => {\n    return {\n        type: actionTypes.SIGNUPFAILED,\n        error\n    }\n};\n\nconst logoutSuccess = () => {\n    return {\n        type: actionTypes.LOGOUTSUCCESS\n    }\n};\n\nconst authenticated = (email, token, creatorId) => {\n    return {\n        type: actionTypes.AUTHENTICATED,\n        email,\n        token,\n        creatorId\n    }\n};\n\nconst unauthenticated = () => {\n    return {\n        type: actionTypes.UNAUTHENTICATED\n    }\n};\n\nexport const authListen = () => {\n    return dispatch => {\n        axios.get('/users/me', { headers: { \"x-auth\": localStorage.getItem('userId') } })\n            .then(user => {\n                if (user.data === \"\")\n                    dispatch(unauthenticated());\n                else \n                    dispatch(authenticated(user.data.email, user.config.headers['x-auth'], user.data._id));\n            })\n            .catch(() => {\n                dispatch(unauthenticated());\n            });\n    }\n};\n\nexport const login = (email, password) => {\n    return dispatch => {\n        axios.post('/users/login', { email, password })\n            .then(user => {\n                console.log(user);\n                localStorage.setItem('userId', user.headers['x-auth']);\n                dispatch(loginSuccess(user.data.email,user.headers['x-auth'], user.data._id));\n            })\n            .catch(() => {\n                dispatch(loginFailed('Password and email don\\'t match'));\n            });\n\n    }\n};\n\nexport const signup = (email, password) => {\n    return dispatch => {\n        axios.post('/users', { email, password })\n            .then(user => {\n                localStorage.setItem('userId', user.headers['x-auth']);\n                dispatch(signupSuccess(user.data.email,user.headers['x-auth'], user.data._id));\n            })\n            .catch(() => {\n                dispatch(signupFailed('Email already exists!'));\n            });\n    }\n};\n\nexport const logout = () => {\n    return dispatch => {\n        axios.delete('/users/me/token', {\n            headers: {\n                \"x-auth\": localStorage.getItem('userId')\n            }\n        }).then(() => {\n            localStorage.removeItem('userId');\n            dispatch(logoutSuccess());\n        }).catch(() => {});\n    }\n};","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport { signup } from '../../store/actions/index';\n\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\n\nconst HomeWrapper = styled.form`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin: 1rem 0;\n`\n\nconst inputInlineStyle = {\n    padding: '0 0.75rem',\n    margin: '1.5rem 0'\n}\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            localEmail: '',\n            localPass: ''\n        };\n        this.emailChanged = this.emailChanged.bind(this);\n        this.passwordChanged = this.passwordChanged.bind(this);\n    };\n\n    emailChanged(e) {\n        this.setState({ localEmail: e.target.value });\n    }\n\n    passwordChanged(e) {\n        this.setState({ localPass: e.target.value });\n    }\n\n    render () {\n        let homeContent;\n        if (this.props.uid) {\n            homeContent = <HomeWrapper> AUTHENTICATED </HomeWrapper>\n        } else {\n            homeContent = (\n                <HomeWrapper onSubmit={(event) => {\n                        event.preventDefault();\n                        this.props.onSignup(this.state.localEmail, this.state.localPass);\n                    }}>\n                        <Input type=\"email\" placeholder=\"E-mail address\" value={this.state.localEmail} changed={this.emailChanged} style={inputInlineStyle} />\n                        <Input type=\"password\" placeholder=\"Password\" value={this.state.localPass} changed={this.passwordChanged} style={inputInlineStyle} />\n                        <Button buttonName=\"Sign up\" />\n                </HomeWrapper>\n            );\n        }\n        \n        return homeContent;\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        uid: state.user.uid,\n        email: state.user.email\n    }\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        onSignup: (email, password) => dispatch(signup(email, password))\n    }\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { authListen } from './store/actions/index';\n\nimport Navbar from './containers/Navbar/Navbar';\nimport Home from './containers/Home/Home';\n\nclass App extends Component {\n  componentDidMount () {\n    this.props.onAuthListen();\n  }\n\n  render() {\n    return (\n      <div>\n        <Navbar />\n        <Home />\n      </div>  \n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onAuthListen: () => dispatch(authListen())\n  }\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\n\nimport reducer from './store/reducers/rootReducer';\nimport './index.css';\nimport App from './App';\n\nconst composeEnhancers = process.env.NODE_ENV === 'development' ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nconst app = (\n    <Provider store={store}>\n        <App />\n    </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}